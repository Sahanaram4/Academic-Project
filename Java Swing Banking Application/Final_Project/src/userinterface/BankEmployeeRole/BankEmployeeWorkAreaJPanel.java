/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.BankEmployeeRole;

import Business.Enterprise.Enterprise;
import Business.Organization.BankEmployeeOrganization;
import Business.Organization.Organization;
import Business.Organization.CoreBankingOrganization;
import Business.Organization.WorkAreaJPanel;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.NewCustomerWorkRequest;
import Business.WorkQueue.CoreBankingWorkRequest;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTable;
import javax.swing.ListSelectionModel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Sumeet
 */
public class BankEmployeeWorkAreaJPanel extends WorkAreaJPanel {

    private JPanel userProcessContainer;
    private BankEmployeeOrganization organization;
    private Enterprise enterprise;
    private UserAccount userAccount;

    /**
     * Creates new form DoctorWorkAreaJPanel
     */
    public BankEmployeeWorkAreaJPanel(JPanel userProcessContainer, UserAccount account, BankEmployeeOrganization organization, Enterprise enterprise) {
        initComponents();

        workRequestJTable.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        newUserRequestJTable.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);

        this.userProcessContainer = userProcessContainer;
        this.organization = organization;
        this.enterprise = enterprise;
        this.userAccount = account;
        valueLabel.setText(enterprise.getName());
        populateRequestTable();
    }

    @Override
    public void populateRequestTable() {

        deleteAllRows(workRequestJTable);
        DefaultTableModel workRequestModel = (DefaultTableModel) workRequestJTable.getModel();

        Organization org = null;
        for (Organization organization : enterprise.getOrganizationDirectory().getOrganizationList()) {
            if (organization instanceof CoreBankingOrganization) {
                org = organization;
                break;
            }
        }
        workRequestModel.setRowCount(0);

        if (null == org) {
            return;
        }

        int serialNumber = 0;
        for (WorkRequest request : org.getWorkQueue().getWorkRequestList()) {
            CoreBankingWorkRequest securityWorkRequest = (CoreBankingWorkRequest) request;
            if (securityWorkRequest.getSender() == userAccount) {
                String[] row = new String[6];
                row[0] = String.valueOf(++serialNumber);
                row[1] = securityWorkRequest.getNewUserRequest().getRequestId();
                row[2] = securityWorkRequest.getMessage();
                row[3] = (null == securityWorkRequest.getReceiver()) ? "N/A" : securityWorkRequest.getReceiver().getUsername();
                row[4] = securityWorkRequest.getTestRequestStatus().toString();
                CoreBankingWorkRequest.TestResult result = ((CoreBankingWorkRequest) request).getTestResult();
                row[5] = result.toString();
                workRequestModel.addRow(row);
            }
        }

        deleteAllRows(newUserRequestJTable);
        DefaultTableModel newUserRequestModel = (DefaultTableModel) newUserRequestJTable.getModel();
        List<WorkRequest> newCustomerWorkQueue = organization.getWorkQueue().getWorkRequestList();

        DateFormat formatter = new SimpleDateFormat("yyyy-MM-dd hh-mm-ss");
        serialNumber = 0;
        for (WorkRequest request : newCustomerWorkQueue) {
            NewCustomerWorkRequest newUserRequest = (NewCustomerWorkRequest) request;
            List<String> row = new ArrayList<>();
            row.add(Integer.toString(++serialNumber));
            row.add(newUserRequest.getRequestId());
            row.add(formatter.format(newUserRequest.getRequestDate()));
            row.add(newUserRequest.getStatus().toString());
            row.add(newUserRequest.getResult().toString());
            row.add(newUserRequest.getAssignedTo());
            newUserRequestModel.addRow(row.toArray());
        }
    }

    UserAccount getUserAccount() {
        return userAccount;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jScrollPane1 = new javax.swing.JScrollPane();
        workRequestJTable = new javax.swing.JTable();
        refreshTestJButton = new javax.swing.JButton();
        enterpriseLabel = new javax.swing.JLabel();
        valueLabel = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        newUserRequestJTable = new javax.swing.JTable();
        btnViewDetails = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(jTable1);

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        workRequestJTable.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(0, 0, 0), null, new java.awt.Color(153, 204, 0), new java.awt.Color(204, 204, 204)));
        workRequestJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "S.No", "Request Id", "Message", "Assigned To", "Status", "Result"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(workRequestJTable);
        if (workRequestJTable.getColumnModel().getColumnCount() > 0) {
            workRequestJTable.getColumnModel().getColumn(0).setResizable(false);
            workRequestJTable.getColumnModel().getColumn(0).setPreferredWidth(5);
            workRequestJTable.getColumnModel().getColumn(1).setResizable(false);
            workRequestJTable.getColumnModel().getColumn(2).setResizable(false);
            workRequestJTable.getColumnModel().getColumn(3).setResizable(false);
            workRequestJTable.getColumnModel().getColumn(4).setResizable(false);
            workRequestJTable.getColumnModel().getColumn(5).setResizable(false);
        }

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 150, 600, 97));

        refreshTestJButton.setBackground(new java.awt.Color(255, 255, 255));
        refreshTestJButton.setText("Refresh");
        refreshTestJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshTestJButtonActionPerformed(evt);
            }
        });
        add(refreshTestJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 270, -1, -1));

        enterpriseLabel.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        enterpriseLabel.setText("Enterprise:");
        add(enterpriseLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 30, 100, 30));
        add(valueLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 30, 158, 26));

        newUserRequestJTable.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(0, 0, 0), null, new java.awt.Color(153, 204, 0), new java.awt.Color(204, 204, 204)));
        newUserRequestJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "S.No", "Request Id", "Date", "Status", "Result", "Assigned To"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(newUserRequestJTable);
        if (newUserRequestJTable.getColumnModel().getColumnCount() > 0) {
            newUserRequestJTable.getColumnModel().getColumn(0).setResizable(false);
            newUserRequestJTable.getColumnModel().getColumn(0).setPreferredWidth(5);
            newUserRequestJTable.getColumnModel().getColumn(1).setResizable(false);
            newUserRequestJTable.getColumnModel().getColumn(2).setResizable(false);
            newUserRequestJTable.getColumnModel().getColumn(3).setResizable(false);
            newUserRequestJTable.getColumnModel().getColumn(4).setResizable(false);
            newUserRequestJTable.getColumnModel().getColumn(5).setResizable(false);
        }

        add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(72, 338, 770, 103));

        btnViewDetails.setBackground(new java.awt.Color(255, 255, 255));
        btnViewDetails.setText("View Details");
        btnViewDetails.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewDetailsActionPerformed(evt);
            }
        });
        add(btnViewDetails, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 460, -1, -1));

        jButton1.setBackground(new java.awt.Color(255, 255, 255));
        jButton1.setText("Assign Me");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 460, -1, -1));

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel2.setText("Bank Employee Work Area");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 40, -1, -1));

        jLabel1.setIcon(new javax.swing.ImageIcon("C:\\Users\\Sumeet\\Desktop\\Assignments\\AED Assignments\\Final\\9.jpg")); // NOI18N
        jLabel1.setText(" ");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1130, 860));
    }// </editor-fold>//GEN-END:initComponents

    private void refreshTestJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshTestJButtonActionPerformed
        populateRequestTable();
    }//GEN-LAST:event_refreshTestJButtonActionPerformed

    private void btnViewDetailsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewDetailsActionPerformed
        int selectedRowIndex = newUserRequestJTable.getSelectedRow();
        if (selectedRowIndex == -1) {
            // no row selected
            JOptionPane.showMessageDialog(this, "Please select record to view details.", "No record selected!", JOptionPane.WARNING_MESSAGE);
            return;
        }

        final int assignedUserColumnIndex = 5;
        String selectedUserRequest = (String) newUserRequestJTable.getModel().getValueAt(selectedRowIndex, assignedUserColumnIndex);
        if (null == selectedUserRequest || !selectedUserRequest.equals(userAccount.getUsername())) {
            // Already assigned. Cannot reassign
            JOptionPane.showMessageDialog(this, "Cannot view unassigned records or those assigned to other employees.", "Cannot view details", JOptionPane.WARNING_MESSAGE);
            return;
        }

        WorkRequest newUserRequest = organization.getWorkQueue().getWorkRequestList().get(selectedRowIndex);

        CustomerDetails newCustomerDetails = new CustomerDetails(userProcessContainer, newUserRequest, userAccount, this, enterprise);
        userProcessContainer.add("customerDetails", newCustomerDetails);

        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);
    }//GEN-LAST:event_btnViewDetailsActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        int selectedRowIndex = newUserRequestJTable.getSelectedRow();
        if (selectedRowIndex == -1) {
            JOptionPane.showMessageDialog(this, "Please select record to view details.", "No record selected!", JOptionPane.WARNING_MESSAGE);
            return;
            // no row selected
        }

        final int assignedUserColumnIndex = 5;
        String selectedUserRequest = (String) newUserRequestJTable.getModel().getValueAt(selectedRowIndex, assignedUserColumnIndex);
        if (null != selectedUserRequest && !selectedUserRequest.equals(NewCustomerWorkRequest.UNASSIGNED)) {
            // Already assigned. Cannot reassign
            JOptionPane.showMessageDialog(this, "Request alredy assigned", "Cannot assign request", JOptionPane.WARNING_MESSAGE);
            return;
        }

        final int statusColumnIndex = 3;
        NewCustomerWorkRequest newUserRequest = (NewCustomerWorkRequest) organization.getWorkQueue().getWorkRequestList().get(selectedRowIndex);
        newUserRequest.setAssignedTo(userAccount.getUsername());
        newUserRequest.setStatus(NewCustomerWorkRequest.NewCustomerRequestStatus.PENDING);
        newUserRequestJTable.setValueAt(userAccount.getUsername(), selectedRowIndex, assignedUserColumnIndex);
        newUserRequestJTable.setValueAt(NewCustomerWorkRequest.NewCustomerRequestStatus.PENDING, selectedRowIndex, statusColumnIndex);
    }//GEN-LAST:event_jButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnViewDetails;
    private javax.swing.JLabel enterpriseLabel;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable newUserRequestJTable;
    private javax.swing.JButton refreshTestJButton;
    private javax.swing.JLabel valueLabel;
    private javax.swing.JTable workRequestJTable;
    // End of variables declaration//GEN-END:variables

    private void deleteAllRows(JTable workRequestJTable) {
        DefaultTableModel dm = (DefaultTableModel) workRequestJTable.getModel();
        int rowCount = dm.getRowCount();
        //Remove rows one by one from the end of the table
        for (int i = rowCount - 1; i >= 0; i--) {
            dm.removeRow(i);
        }
    }

}
