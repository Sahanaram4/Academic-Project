/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.CoreBankingTeamRole;

import Business.EcoSystem;
import Business.Enterprise.Enterprise;
import Business.Organization.CoreBankingOrganization;
import Business.Organization.Organization;
import Business.Organization.WorkAreaJPanel;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.CoreBankingWorkRequest;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.ListSelectionModel;
import javax.swing.table.DefaultTableModel;
import userinterface.BankEmployeeRole.CustomerDetails;

/**
 *
 * @author Sumeet
 */
public class CoreBankingTeamWorkAreaJPanel extends WorkAreaJPanel {

    private JPanel userProcessContainer;
    private EcoSystem business;
    private UserAccount userAccount;
    private CoreBankingOrganization securityOrganization;
    private Enterprise enterprise;

    /**
     * Creates new form LabAssistantWorkAreaJPanel
     */
    public CoreBankingTeamWorkAreaJPanel(JPanel userProcessContainer, UserAccount account, Organization organization, EcoSystem business, Enterprise enterprise) {
        initComponents();
        
        workRequestJTable.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);

        this.userProcessContainer = userProcessContainer;
        this.userAccount = account;
        this.business = business;
        this.securityOrganization = (CoreBankingOrganization) organization;
        this.enterprise = enterprise;
        populateRequestTable();
    }

    @Override
    public void populateRequestTable() {
        DefaultTableModel model = (DefaultTableModel) workRequestJTable.getModel();

        model.setRowCount(0);

        int serialNumber = 0;
        for (WorkRequest request : securityOrganization.getWorkQueue().getWorkRequestList()) {
            CoreBankingWorkRequest securityTestWorkRequest = (CoreBankingWorkRequest) request;
            String[] row = new String[7];
            row[0] = String.valueOf(++serialNumber);
            row[1] = securityTestWorkRequest.getNewUserRequest().getRequestId();
            row[2] = securityTestWorkRequest.getMessage();

            row[3] = securityTestWorkRequest.getSender().getEmployee().getName();
            row[4] = securityTestWorkRequest.getReceiver() == null ? UNASSIGNED
                    : securityTestWorkRequest.getReceiver().getUsername();

            row[5] = securityTestWorkRequest.getTestRequestStatus().toString();
            row[6] = securityTestWorkRequest.getTestResult().toString();
            model.addRow(row);
        }
    }
    private static final String UNASSIGNED = "N/A";

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        workRequestJTable = new javax.swing.JTable();
        assignJButton = new javax.swing.JButton();
        processJButton = new javax.swing.JButton();
        refreshJButton = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        workRequestJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "S.No", "Request Id", "Message", "Sender", "Assigned To", "Status", "Result"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(workRequestJTable);
        if (workRequestJTable.getColumnModel().getColumnCount() > 0) {
            workRequestJTable.getColumnModel().getColumn(0).setResizable(false);
            workRequestJTable.getColumnModel().getColumn(0).setPreferredWidth(5);
            workRequestJTable.getColumnModel().getColumn(1).setResizable(false);
            workRequestJTable.getColumnModel().getColumn(2).setResizable(false);
            workRequestJTable.getColumnModel().getColumn(3).setResizable(false);
            workRequestJTable.getColumnModel().getColumn(4).setResizable(false);
            workRequestJTable.getColumnModel().getColumn(5).setResizable(false);
            workRequestJTable.getColumnModel().getColumn(6).setResizable(false);
        }

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 180, 740, 120));

        assignJButton.setBackground(new java.awt.Color(255, 255, 255));
        assignJButton.setText("Assign to me");
        assignJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                assignJButtonActionPerformed(evt);
            }
        });
        add(assignJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 360, -1, -1));

        processJButton.setBackground(new java.awt.Color(255, 255, 255));
        processJButton.setText("Process");
        processJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                processJButtonActionPerformed(evt);
            }
        });
        add(processJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(760, 360, -1, -1));

        refreshJButton.setBackground(new java.awt.Color(255, 255, 255));
        refreshJButton.setText("Refresh");
        refreshJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshJButtonActionPerformed(evt);
            }
        });
        add(refreshJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 360, -1, -1));

        jLabel2.setBackground(new java.awt.Color(255, 255, 255));
        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel2.setText("Core Banking Team Work Area");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 80, -1, -1));

        jLabel1.setIcon(new javax.swing.ImageIcon("C:\\Users\\Sumeet\\Desktop\\Assignments\\AED Assignments\\Final\\9.jpg")); // NOI18N
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1090, 710));
    }// </editor-fold>//GEN-END:initComponents

    private void assignJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_assignJButtonActionPerformed

        int selectedRowIndex = workRequestJTable.getSelectedRow();

        if (selectedRowIndex == -1) {
            JOptionPane.showMessageDialog(this, "Please select entry for assignment", "Cannot assign", JOptionPane.ERROR_MESSAGE);
            return;
        }

        final int assignedToIndex = 4;
        String selectedUserRequest = (String) workRequestJTable.getModel().getValueAt(selectedRowIndex, assignedToIndex);
        if (null != selectedUserRequest && !selectedUserRequest.equals(UNASSIGNED)) {
            // Already assigned. Cannot reassign
            JOptionPane.showMessageDialog(this, "Request already assined.", "Cannot assign request", JOptionPane.ERROR_MESSAGE);
            return;
        }

        CoreBankingWorkRequest workRequest = (CoreBankingWorkRequest) securityOrganization.getWorkQueue().getWorkRequestList().get(selectedRowIndex);
        workRequest.setReceiver(userAccount);
        workRequest.setTestRequestStatus(CoreBankingWorkRequest.TestRequestStatus.PROCESSING);

        final int statusIndex = 5;
        workRequestJTable.setValueAt(userAccount.getUsername(), selectedRowIndex, assignedToIndex);
        workRequestJTable.setValueAt(workRequest.getTestRequestStatus(), selectedRowIndex, statusIndex);
    }//GEN-LAST:event_assignJButtonActionPerformed

    private void processJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_processJButtonActionPerformed

        int selectedRowIndex = workRequestJTable.getSelectedRow();
        if (selectedRowIndex == -1) {
            JOptionPane.showMessageDialog(this, "Please select entry for processing", "Cannot process", JOptionPane.ERROR_MESSAGE);
            return;
        }

        final int assignedUserColumnIndex = 4;
        String selectedUserRequest = (String) workRequestJTable.getModel().getValueAt(selectedRowIndex, assignedUserColumnIndex);

        System.out.println("Assigned ::: " + selectedUserRequest);
        System.out.println(userAccount.getUsername());
        if (null == selectedUserRequest || !selectedUserRequest.equals(userAccount.getUsername())) {
            // Cannot process other user request
            JOptionPane.showMessageDialog(this, "Selected entry is assigned to other user", "Cannot process", JOptionPane.ERROR_MESSAGE);
            return;
        }

        System.out.println("Rwached...");
        CoreBankingWorkRequest request = (CoreBankingWorkRequest) securityOrganization.getWorkQueue().getWorkRequestList().get(selectedRowIndex);
        CustomerDetails newCustomerDetails = new CustomerDetails(userProcessContainer, request, userAccount, this, enterprise);
        userProcessContainer.add("customerDetails", newCustomerDetails);

        System.out.println("Created");
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);
        System.out.println("Done");
    }//GEN-LAST:event_processJButtonActionPerformed

    private void refreshJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshJButtonActionPerformed
        populateRequestTable();
    }//GEN-LAST:event_refreshJButtonActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton assignJButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton processJButton;
    private javax.swing.JButton refreshJButton;
    private javax.swing.JTable workRequestJTable;
    // End of variables declaration//GEN-END:variables
}
